name: Deploy to Staging

on:
  push:
    branches: [develop]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate Prisma Client
        run: |
          cd packages/database
          npm run db:generate
          
      - name: Build applications
        run: npm run build
        env:
          NEXT_PUBLIC_APP_URL: ${{ secrets.STAGING_APP_URL }}
          NEXT_PUBLIC_API_URL: ${{ secrets.STAGING_API_URL }}
          
      - name: Run database migrations
        run: |
          cd packages/database
          npm run db:migrate:deploy
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
          
      # Deploy frontend to Vercel
      - name: Deploy Frontend to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/web
          vercel-args: '--prod --env NODE_ENV=staging'
          
      # Deploy backend (example with Railway)
      - name: Deploy Backend to Railway
        uses: bervProject/railway-deploy@v1.2.0
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: 'pomodoro-api-staging'
          
      - name: Run health checks
        run: |
          echo "Waiting for services to be ready..."
          sleep 30
          
          # Check frontend health
          curl -f ${{ secrets.STAGING_APP_URL }}/health || exit 1
          
          # Check backend health  
          curl -f ${{ secrets.STAGING_API_URL }}/health || exit 1
          
      - name: Notify deployment status
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          fields: repo,message,commit,author,action,eventName,ref,workflow