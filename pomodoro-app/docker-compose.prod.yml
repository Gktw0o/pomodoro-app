version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pomodoro-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pomodoro_db}
      POSTGRES_USER: ${POSTGRES_USER:-pomodoro}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - pomodoro-prod-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pomodoro-redis-prod
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_prod_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - pomodoro-prod-network

  # API Server
  api:
    build:
      context: .
      target: api-production
    container_name: pomodoro-api-prod
    restart: unless-stopped
    ports:
      - "${API_PORT:-3001}:3001"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-pomodoro}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-pomodoro_db}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
    depends_on:
      - postgres
      - redis
    networks:
      - pomodoro-prod-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Application
  web:
    build:
      context: .
      target: web-production
    container_name: pomodoro-web-prod
    restart: unless-stopped
    ports:
      - "${WEB_PORT:-3000}:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://api:3001
    depends_on:
      - api
    networks:
      - pomodoro-prod-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pomodoro-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
      - api
    networks:
      - pomodoro-prod-network

volumes:
  postgres_prod_data:
  redis_prod_data:

networks:
  pomodoro-prod-network:
    driver: bridge